// <auto-generated />
using System;
using ArumModels.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArumModels.Migrations
{
    [DbContext(typeof(ArumDbContext))]
    [Migration("20210809020506_Update1_6")]
    partial class Update1_6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9");

            modelBuilder.Entity("ArumModels.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ArumModels.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("ArumModels.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("ArumModels.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("ArumModels.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ArumModels.Models.OrderedMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderedMenu");
                });

            modelBuilder.Entity("ArumModels.Models.OrderedOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("OrderedMenuId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrderedMenuId");

                    b.ToTable("OrderedOption");
                });

            modelBuilder.Entity("IngredientMenu", b =>
                {
                    b.Property<int>("IngredientListId")
                        .HasColumnType("int");

                    b.Property<int>("MenuListId")
                        .HasColumnType("int");

                    b.HasKey("IngredientListId", "MenuListId");

                    b.HasIndex("MenuListId");

                    b.ToTable("IngredientMenu");
                });

            modelBuilder.Entity("MenuOption", b =>
                {
                    b.Property<int>("MenuListId")
                        .HasColumnType("int");

                    b.Property<int>("OptionListId")
                        .HasColumnType("int");

                    b.HasKey("MenuListId", "OptionListId");

                    b.HasIndex("OptionListId");

                    b.ToTable("MenuOption");
                });

            modelBuilder.Entity("ArumModels.Models.Menu", b =>
                {
                    b.HasOne("ArumModels.Models.Category", null)
                        .WithMany("MenuList")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("ArumModels.Models.OrderedMenu", b =>
                {
                    b.HasOne("ArumModels.Models.Order", null)
                        .WithMany("MenuList")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("ArumModels.Models.OrderedOption", b =>
                {
                    b.HasOne("ArumModels.Models.OrderedMenu", null)
                        .WithMany("OptionList")
                        .HasForeignKey("OrderedMenuId");
                });

            modelBuilder.Entity("IngredientMenu", b =>
                {
                    b.HasOne("ArumModels.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArumModels.Models.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenuListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuOption", b =>
                {
                    b.HasOne("ArumModels.Models.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenuListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArumModels.Models.Option", null)
                        .WithMany()
                        .HasForeignKey("OptionListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArumModels.Models.Category", b =>
                {
                    b.Navigation("MenuList");
                });

            modelBuilder.Entity("ArumModels.Models.Order", b =>
                {
                    b.Navigation("MenuList");
                });

            modelBuilder.Entity("ArumModels.Models.OrderedMenu", b =>
                {
                    b.Navigation("OptionList");
                });
#pragma warning restore 612, 618
        }
    }
}
